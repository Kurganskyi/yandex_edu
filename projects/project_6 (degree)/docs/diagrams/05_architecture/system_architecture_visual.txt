╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                          System Architecture - Stets Home (Архитектура системы)                                                ║
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                             ┌──────────────────────────────────────┐
                             │         👤 Пользователь              │
                             │      (Mobile App Interface)         │
                             └────────────────┬─────────────────────┘
                                              │
                                              │
                    ╔═══════════════════════════════════════════════════════════════════════════════════╗
                    ║                              FRONTEND LAYER                                        ║
                    ╠═══════════════════════════════════════════════════════════════════════════════════╣
                    ║                                                                                   ║
                    ║         ┌──────────────────────────────────────────────────────┐                 ║
                    ║         │  📱 Mobile App (React Native/Flutter)                │                 ║
                    ║         │  • UI/UX интерфейс                                    │                 ║
                    ║         │  • Управление состоянием                              │                 ║
                    ║         │  • Локальное кэширование                              │                 ║
                    ║         │  • Push-уведомления                                   │                 ║
                    ║         │  • QR-сканер                                          │                 ║
                    ║         └──────────────────────────────────────────────────────┘                 ║
                    ║                                                                                   ║
                    ╚═══════════════════════════════════════════════════════════════════════════════════╝
                                              │
                                              │ HTTP/HTTPS
                                              │
                    ╔═══════════════════════════════════════════════════════════════════════════════════╗
                    ║                               API LAYER                                           ║
                    ╠═══════════════════════════════════════════════════════════════════════════════════╣
                    ║                                                                                   ║
                    ║         ┌──────────────────────────────────────────────────────┐                 ║
                    ║         │  🚪 API Gateway                                      │                 ║
                    ║         │  • Маршрутизация запросов                            │                 ║
                    ║         │  • Аутентификация и авторизация                       │                 ║
                    ║         │  • Rate limiting                                     │                 ║
                    ║         │  • Логирование                                       │                 ║
                    ║         │  • Load balancing                                    │                 ║
                    ║         └──────────────────────────────────────────────────────┘                 ║
                    ║                                                                                   ║
                    ╚═══════════════════════════════════════════════════════════════════════════════════╝
                                              │
                                              │
                    ┌─────────────────────────┼─────────────────────────┐
                    │                         │                         │
                    ▼                         ▼                         ▼
        ╔═══════════════════════════╗ ╔═══════════════════════════╗ ╔═══════════════════════════╗
        ║   BUSINESS LOGIC LAYER    ║ ║   BUSINESS LOGIC LAYER    ║ ║   BUSINESS LOGIC LAYER    ║
        ╠═══════════════════════════╣ ╠═══════════════════════════╣ ╠═══════════════════════════╣
        ║                           ║ ║                           ║ ║                           ║
        ║  ┌─────────────────────┐  ║ ║  ┌─────────────────────┐  ║ ║  ┌─────────────────────┐  ║
        ║  │ 🔐 Auth Service    │  ║ ║  │ 👤 User Service     │  ║ ║  │ 🏠 Home Service     │  ║
        ║  │  • Регистрация     │  ║ ║  │  • CRUD пользоват.  │  ║ ║  │  • CRUD домов       │  ║
        ║  │  • Вход в систему  │  ║ ║  │  • Управление       │  ║ ║  │  • CRUD комнат      │  ║
        ║  │  • JWT токены      │  ║ ║  │    профилями        │  ║ ║  │  • Участники дома   │  ║
        ║  └─────────────────────┘  ║ ║  └─────────────────────┘  ║ ║  └─────────────────────┘  ║
        ║                           ║ ║                           ║ ║                           ║
        ╚═══════════════════════════╝ ╚═══════════════════════════╝ ╚═══════════════════════════╝
                    │                         │                         │
                    │                         │                         │
                    ▼                         ▼                         ▼
        ╔═══════════════════════════╗ ╔═══════════════════════════╗ ╔═══════════════════════════╗
        ║   BUSINESS LOGIC LAYER    ║ ║   BUSINESS LOGIC LAYER    ║ ║   BUSINESS LOGIC LAYER    ║
        ╠═══════════════════════════╣ ╠═══════════════════════════╣ ╠═══════════════════════════╣
        ║                           ║ ║                           ║ ║                           ║
        ║  ┌─────────────────────┐  ║ ║  ┌─────────────────────┐  ║ ║  ┌─────────────────────┐  ║
        ║  │ 🔌 Device Service  │  ║ ║  │ 🤖 Scenario Service │  ║ ║  │ 🌐 IoT Gateway      │  ║
        ║  │  • Добавление      │  ║ ║  │  • Создание         │  ║ ║  │  • Связь с          │  ║
        ║  │    устройств       │  ║ ║  │    сценариев        │  ║ ║  │    устройствами     │  ║
        ║  │  • CRUD операций   │  ║ ║  │  • Выполнение       │  ║ ║  │  • Синхронизация    │  ║
        ║  │  • Предотвращение  │  ║ ║  │  • Расписание       │  ║ ║  │  • Обработка ошибок │  ║
        ║  │    дубликатов      │  ║ ║  │  • Планировщик      │  ║ ║  │  • Энергосбережение │  ║
        ║  └─────────────────────┘  ║ ║  └─────────────────────┘  ║ ║  └─────────────────────┘  ║
        ║                           ║ ║                           ║ ║                           ║
        ╚═══════════════════════════╝ ╚═══════════════════════════╝ ╚═══════════════════════════╝
                    │                         │                         │
                    │                         │                         │
                    ▼                         ▼                         ▼
        ╔═══════════════════════════╗ ╔═══════════════════════════╗
        ║   BUSINESS LOGIC LAYER    ║ ║  EXTERNAL INTEGRATION     ║
        ╠═══════════════════════════╣ ╠═══════════════════════════╣
        ║                           ║ ║                           ║
        ║  ┌─────────────────────┐  ║ ║  ┌─────────────────────┐  ║
        ║  │ 📢 Notification     │  ║ ║  │ 🏠 Умные            │  ║
        ║  │    Service          │  ║ ║  │    устройства Stets │  ║
        ║  │  • Email            │  ║ ║  │    (IoT)            │  ║
        ║  │  • Push             │  ║ ║  │                     │  ║
        ║  │  • Восстановление   │  ║ ║  └─────────────────────┘  ║
        ║  │  • Приглашения      │  ║ ║                           ║
        ║  └─────────────────────┘  ║ ║  ┌─────────────────────┐  ║
        ║                           ║ ║  │ 📧 Email Service    │  ║
        ║                           ║ ║  │    (External)       │  ║
        ║                           ║ ║  │                     │  ║
        ║                           ║ ║  └─────────────────────┘  ║
        ╚═══════════════════════════╝ ╚═══════════════════════════╝
                    │
                    │
        ┌───────────┼───────────┐
        │           │           │
        ▼           ▼           ▼
╔═══════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                    DATA LAYER                                                         ║
╠═══════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                       ║
║  ┌────────────────────────────────────┐  ┌────────────────────────────────────┐                     ║
║  │  🗄️ PostgreSQL Database            │  │  ⚡ Redis Cache                     │                     ║
║  │  (Primary Data Store)              │  │  • Сессии                          │                     ║
║  │                                    │  │  • Кэш часто запрашиваемых         │                     ║
║  │  • Пользователи                    │  │  • Временные данные                │                     ║
║  │  • Дома, комнаты                   │  │                                    │                     ║
║  │  • Устройства                       │  └────────────────────────────────────┘                     ║
║  │  • Сценарии                         │                                                        ║
║  │  • Аудит и логи                     │  ┌────────────────────────────────────┐                     ║
║  └────────────────────────────────────┘  │  📬 Message Queue                   │                     ║
║                                          │  (RabbitMQ/Kafka)                   │                     ║
║                                          │  • Асинхронная обработка           │                     ║
║                                          │  • Выполнение сценариев            │                     ║
║                                          │  • Очереди задач                   │                     ║
║                                          └────────────────────────────────────┘                     ║
║                                                                                                       ║
╚═══════════════════════════════════════════════════════════════════════════════════════════════════════╝

════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                           ╔═══════════════════════════════════════════════════════════════════════════════════╗
                           ║                         MONITORING LAYER                                           ║
                           ╠═══════════════════════════════════════════════════════════════════════════════════╣
                           ║                                                                                   ║
                           ║  ┌────────────────────────────────────┐  ┌────────────────────────────────────┐   ║
                           ║  │  📊 Monitoring                     │  │  📝 Logging                        │   ║
                           ║  │  (Prometheus, Grafana)             │  │  (ELK Stack)                       │   ║
                           ║  │                                    │  │                                    │   ║
                           ║  │  • Метрики производительности      │  │  • Централизованное логирование    │   ║
                           ║  │  • Трейсинг запросов               │  │  • Анализ ошибок                   │   ║
                           ║  │  • Алертинг                        │  │  • Аудит событий                   │   ║
                           ║  │  • Дашборды                        │  │                                    │   ║
                           ║  └────────────────────────────────────┘  └────────────────────────────────────┘   ║
                           ║                                                                                   ║
                           ╚═══════════════════════════════════════════════════════════════════════════════════╝

════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
                                                    КОМПОНЕНТЫ СИСТЕМЫ
════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

FRONTEND LAYER (Слой представления):
════════════════════════════════════

📱 Mobile App (React Native/Flutter)
   • Мобильное приложение для iOS и Android
   • UI/UX интерфейс, управление состоянием
   • Локальное кэширование
   • Push-уведомления, QR-сканер

API LAYER (Слой API):
═════════════════════

🚪 API Gateway
   • Единая точка входа
   • Маршрутизация, аутентификация
   • Rate limiting, логирование
   • Load balancing

BUSINESS LOGIC LAYER (Слой бизнес-логики):
══════════════════════════════════════════

🔐 Authentication Service
   • Регистрация, вход, восстановление пароля
   • Управление JWT токенами
   • Проверка прав доступа

👤 User Service
   • CRUD операции с пользователями
   • Управление профилями
   • Изменение email и пароля

🏠 Home Service
   • CRUD операции с домами и комнатами
   • Управление участниками дома
   • Приглашения пользователей

🔌 Device Service
   • Добавление устройств (QR + ручной ввод)
   • CRUD операции с устройствами
   • Управление статусом устройств
   • Предотвращение дубликатов

🤖 Scenario Service
   • Создание и редактирование сценариев
   • Выполнение сценариев
   • Управление расписанием
   • Планировщик задач

🌐 IoT Gateway
   • Коммуникация с IoT устройствами
   • Синхронизация статусов
   • Обработка ошибок связи
   • Режим энергосбережения

📢 Notification Service
   • Email и Push уведомления
   • Восстановление пароля
   • Приглашения пользователей

DATA LAYER (Слой данных):
═════════════════════════

🗄️ PostgreSQL Database
   • Основное хранилище данных
   • Пользователи, дома, комнаты
   • Устройства и сценарии
   • Аудит и логи

⚡ Redis Cache
   • Кэширование и сессии
   • Сессии пользователей
   • Кэш часто запрашиваемых данных
   • Временные данные

📬 Message Queue (RabbitMQ/Kafka)
   • Асинхронная обработка
   • Выполнение сценариев
   • Очереди задач
   • Event-driven архитектура

MONITORING LAYER (Слой мониторинга):
═════════════════════════════════════

📊 Monitoring (Prometheus, Grafana)
   • Метрики производительности
   • Трейсинг запросов
   • Алертинг
   • Дашборды

📝 Logging (ELK Stack)
   • Централизованное логирование
   • Анализ ошибок
   • Аудит событий

EXTERNAL SYSTEMS (Внешние системы):
═════════════════════════════════════

🏠 Умные устройства Stets (IoT)
   • Физические IoT-устройства
   • Лампочки и розетки
   • Поддержка энергосбережения

📧 Email Service (External)
   • Отправка email
   • Восстановление пароля
   • Приглашения

════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
                                                    ТЕХНОЛОГИЧЕСКИЙ СТЕК
════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

FRONTEND:
═════════

• React Native / Flutter
• Redux / MobX (State Management)
• React Navigation / Flutter Navigation
• AsyncStorage / Hive (Local Storage)
• Firebase (Push Notifications)

BACKEND:
════════

• Node.js / Python (FastAPI) / Go
• Express / Flask / Gin
• REST API
• GraphQL (опционально)
• WebSocket для real-time

DATABASE:
═════════

• PostgreSQL 14+ (Primary)
• Redis 6+ (Cache)
• MongoDB (опционально для логов)

MESSAGE QUEUE:
══════════════

• RabbitMQ / Apache Kafka
• Celery / Bull (Task Queue)

MONITORING:
═══════════

• Prometheus
• Grafana
• ELK Stack (Elasticsearch, Logstash, Kibana)
• Jaeger (Tracing)

INFRASTRUCTURE:
═══════════════

• Docker / Kubernetes
• AWS / Azure / GCP
• CI/CD (GitLab CI, Jenkins)
• Nginx

AUTHENTICATION:
═══════════════

• JWT (JSON Web Tokens)
• OAuth 2.0
• bcrypt (Password Hashing)
• Rate Limiting

════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
                                                    АРХИТЕКТУРНЫЕ ПАТТЕРНЫ
════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

✅ MICROSERVICES
   Независимые сервисы для каждого домена
   
✅ API GATEWAY
   Единая точка входа, маршрутизация
   
✅ EVENT-DRIVEN
   Асинхронная обработка через очереди
   
✅ CQRS (Command Query Responsibility Segregation)
   Разделение чтения и записи (опционально)
   
✅ CACHING
   Redis для часто запрашиваемых данных
   
✅ MONITORING & OBSERVABILITY
   Логирование, метрики, трейсинг

════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

                                                          [Конец архитектуры]
